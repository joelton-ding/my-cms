{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/joelton/my-cms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joelton/my-cms/src/page/Login/Login.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-image: url(\\\"../images/user-layout.jpg\\\");\\n  background-size: cover;\\n  height: 100vh;\\n  width: 100%;\\n  -webkit-box-align: center;\\n    -webkit-align-items: center;\\n    -ms-flex-align: center;\\n    align-items: center;\\n    -webkit-box-pack: center;\\n    -webkit-justify-content: center;\\n    -ms-flex-pack: center;\\n    justify-content: center;\\n  .layer-mask {\\n    background: rgba(0,0,0,.3);\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n  }\\n  .container {\\n    max-width: 400px;\\n    margin: 0 auto;\\n    border: 1px solid #e9e9e9;\\n    padding: 20px;\\n    border-radius: 5px 5px 5px 5px;\\n    -moz-border-radius: 5px 5px 5px 5px;\\n    -webkit-border-radius: 5px 5px 5px 5px;\\n    background-color: #ffffff;\\n    z-index: 100;\\n    position: relative;\\n    .login-form-forgot {\\n      float: right;\\n    }\\n    h1 {\\n      color: rgba(0,0,0,.85);\\n      font-weight: 500;\\n      font-family: 'robotomedium', Helvetica, Arial, sans-serif;\\n      font-size: 2rem;\\n      margin: 0 0 12px 0;\\n      padding: 0;\\n    }\\n    h1.text {\\n      text-align: center;\\n    }\\n    .login-form-button {\\n      text-align: center;\\n      width: 100%;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport LoginStore from '../../store/LoginStore';\nconst FormItem = Form.Item;\nconst Login = Form.create()(observer(props => {\n  let user = LoginStore.state.user,\n      showChecked = LoginStore.actions.showChecked;\n  console.log('user >>>>> ', user);\n  console.log('user1 >>>>>', JSON.parse(JSON.stringify(user)));\n  console.log('LoginStore >>>>>', JSON.parse(JSON.stringify(LoginStore))); // const handleSubmit = (event) => {\n  //   event.preventDefault()\n  //   console.log('clicked')\n  // }\n\n  const getFieldDecorator = props.form.getFieldDecorator;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('clicked');\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  return React.createElement(LoginContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"layer-mask\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Form, {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, getFieldDecorator('userName', {\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        fontSize: 13\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }),\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        fontSize: 13\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, getFieldDecorator('remember', {\n    valuePropName: 'checked',\n    initialValue: true\n  })(React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Remember me\")), React.createElement(Link, {\n    className: \"login-form-forgot\",\n    to: \"/forgot-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Forgot password\"), React.createElement(Button, {\n    onSubmit: handleSubmit,\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Log In\")))));\n})); // const LoginForm = Form.create()(Login);\n\nconst LoginContainer = styled('div')(_templateObject());\nexport default Login;","map":{"version":3,"sources":["/Users/joelton/my-cms/src/page/Login/Login.js"],"names":["React","Link","Form","Icon","Input","Button","Checkbox","styled","observer","LoginStore","FormItem","Item","Login","create","props","user","state","showChecked","actions","console","log","JSON","parse","stringify","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","rules","required","message","fontSize","valuePropName","initialValue","LoginContainer"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,MAApD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAtB;AAEA,MAAMC,KAAK,GAAGV,IAAI,CAACW,MAAL,GAAcL,QAAQ,CAACM,KAAK,IAAI;AAAA,MAC7BC,IAD6B,GACQN,UADR,CACtCO,KADsC,CAC7BD,IAD6B;AAAA,MACVE,WADU,GACQR,UADR,CACrBS,OADqB,CACVD,WADU;AAE5CE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,IAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,IAAf,CAAX,CAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,UAAf,CAAX,CAAhC,EAJ4C,CAM5C;AACA;AAEA;AACA;;AAV4C,QAYpCe,iBAZoC,GAYdV,KAAK,CAACW,IAZQ,CAYpCD,iBAZoC;;AAa5C,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAN,IAAAA,KAAK,CAACW,IAAN,CAAWI,cAAX,CAA0B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACzC,UAAI,CAACD,GAAL,EAAU;AACRX,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCW,MAAzC;AACD;AACF,KAJD;AAKD,GARD;;AAUA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,iBAAiB,CAAC,UAAD,EAAa;AAC7BQ,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAA8D,IAAA,WAAW,EAAC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADH,CADF,EAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,iBAAiB,CAAC,UAAD,EAAa;AAC7BQ,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAA8D,IAAA,IAAI,EAAC,UAAnE;AAA8E,IAAA,WAAW,EAAC,UAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADH,CARF,EAeE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,iBAAiB,CAAC,UAAD,EAAa;AAC7BY,IAAAA,aAAa,EAAE,SADc;AAE7BC,IAAAA,YAAY,EAAE;AAFe,GAAb,CAAjB,CAIC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJD,CADH,EAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAoC,IAAA,EAAE,EAAC,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAUE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEX,YAAlB;AAAgC,IAAA,IAAI,EAAC,SAArC;AAA+C,IAAA,QAAQ,EAAC,QAAxD;AAAiE,IAAA,SAAS,EAAC,mBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CAfF,CAFF,CAFF,CADF;AAuCD,CA9DmC,CAAtB,CAAd,C,CAgEA;;AAEA,MAAMY,cAAc,GAAG/B,MAAM,CAAC,KAAD,CAAT,mBAApB;AAoDA,eAAeK,KAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\nimport styled from 'styled-components'\nimport { observer } from 'mobx-react'\nimport LoginStore from '../../store/LoginStore'\n\nconst FormItem = Form.Item\n\nconst Login = Form.create()(observer(props => {\n  let { state: { user }, actions: { showChecked } } = LoginStore\n  console.log('user >>>>> ', user)\n  console.log('user1 >>>>>', JSON.parse(JSON.stringify(user)))\n  console.log('LoginStore >>>>>', JSON.parse(JSON.stringify(LoginStore)))\n  \n  // const handleSubmit = (event) => {\n  //   event.preventDefault()\n\n  //   console.log('clicked')\n  // }\n\n  const { getFieldDecorator } = props.form\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('clicked')\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    })\n  }\n\n  return (\n    <LoginContainer>\n      <div className=\"layer-mask\" />\n      <div className=\"container\">\n        <h1 className=\"text\">Login</h1>\n        <Form className=\"login-form\">\n          <FormItem>\n            {getFieldDecorator('userName', {\n              rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />} placeholder=\"Username\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your password!' }],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />} type=\"password\" placeholder=\"Password\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n              <Checkbox>Remember me</Checkbox>\n            )}\n            <Link className=\"login-form-forgot\" to=\"/forgot-password\">\n              Forgot password\n            </Link>\n            <Button onSubmit={handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Log In\n              {/* <Link to=\"/dashboard\">Log In</Link> */}\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    </LoginContainer>\n  )\n}))\n\n// const LoginForm = Form.create()(Login);\n\nconst LoginContainer = styled('div')`\n  background-image: url(\"../images/user-layout.jpg\");\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n  .layer-mask {\n    background: rgba(0,0,0,.3);\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n  }\n  .container {\n    max-width: 400px;\n    margin: 0 auto;\n    border: 1px solid #e9e9e9;\n    padding: 20px;\n    border-radius: 5px 5px 5px 5px;\n    -moz-border-radius: 5px 5px 5px 5px;\n    -webkit-border-radius: 5px 5px 5px 5px;\n    background-color: #ffffff;\n    z-index: 100;\n    position: relative;\n    .login-form-forgot {\n      float: right;\n    }\n    h1 {\n      color: rgba(0,0,0,.85);\n      font-weight: 500;\n      font-family: 'robotomedium', Helvetica, Arial, sans-serif;\n      font-size: 2rem;\n      margin: 0 0 12px 0;\n      padding: 0;\n    }\n    h1.text {\n      text-align: center;\n    }\n    .login-form-button {\n      text-align: center;\n      width: 100%;\n    }\n  }\n`\nexport default Login\n\n"]},"metadata":{},"sourceType":"module"}